[{"C:\\Users\\성의현\\Desktop\\grad\\src\\index.js":"1","C:\\Users\\성의현\\Desktop\\grad\\src\\App.js":"2","C:\\Users\\성의현\\Desktop\\grad\\src\\apiUrl.js":"3","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\root\\LoginMain.js":"4","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\HomeMain.js":"5","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\root\\mainInnerStuff.js":"6","C:\\Users\\성의현\\Desktop\\grad\\src\\logo\\loginLogo.js":"7","C:\\Users\\성의현\\Desktop\\grad\\src\\logo\\mainLogo.js":"8","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\searchBar.js":"9","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\numberNotice.js":"10","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\newPost\\newPost.js":"11","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\notice\\notice.js":"12","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\friend\\friend.js":"13","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\chat\\chat.js":"14","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\setting\\setting.js":"15","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\settingMain.js":"16","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\page\\page.js":"17","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\pageList\\pageList.js":"18","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\chat\\chat.js":"19","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\newPost\\newPost.js":"20","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerMain.js":"21","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerSignUp.js":"22","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerFindPW.js":"23","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\profile.js":"24","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\passwordSetting.js":"25","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\blockSetting.js":"26","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\profileSetting.js":"27","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\filteringSetting.js":"28","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\noticeSetting.js":"29"},{"size":197,"mtime":1662350852278,"results":"30","hashOfConfig":"31"},{"size":3092,"mtime":1662810117141,"results":"32","hashOfConfig":"31"},{"size":1413,"mtime":1662816295706,"results":"33","hashOfConfig":"31"},{"size":532,"mtime":1662350852298,"results":"34","hashOfConfig":"31"},{"size":5430,"mtime":1662786104476,"results":"35","hashOfConfig":"31"},{"size":1108,"mtime":1662350852299,"results":"36","hashOfConfig":"31"},{"size":524,"mtime":1662803158670,"results":"37","hashOfConfig":"31"},{"size":527,"mtime":1662803155794,"results":"38","hashOfConfig":"31"},{"size":462,"mtime":1662553106338,"results":"39","hashOfConfig":"31"},{"size":298,"mtime":1662553106337,"results":"40","hashOfConfig":"31"},{"size":6183,"mtime":1662350852289,"results":"41","hashOfConfig":"31"},{"size":1189,"mtime":1662350852290,"results":"42","hashOfConfig":"31"},{"size":1642,"mtime":1662350852288,"results":"43","hashOfConfig":"31"},{"size":98,"mtime":1662350852287,"results":"44","hashOfConfig":"31"},{"size":2361,"mtime":1662350852291,"results":"45","hashOfConfig":"31"},{"size":820,"mtime":1662350852287,"results":"46","hashOfConfig":"31"},{"size":1595,"mtime":1662789236113,"results":"47","hashOfConfig":"31"},{"size":109,"mtime":1662350852284,"results":"48","hashOfConfig":"31"},{"size":97,"mtime":1662350852281,"results":"49","hashOfConfig":"31"},{"size":3315,"mtime":1662796794445,"results":"50","hashOfConfig":"31"},{"size":5641,"mtime":1662817448653,"results":"51","hashOfConfig":"31"},{"size":14201,"mtime":1662473000733,"results":"52","hashOfConfig":"31"},{"size":2604,"mtime":1662816499174,"results":"53","hashOfConfig":"31"},{"size":484,"mtime":1662553106338,"results":"54","hashOfConfig":"31"},{"size":119,"mtime":1662350852285,"results":"55","hashOfConfig":"31"},{"size":110,"mtime":1662350852284,"results":"56","hashOfConfig":"31"},{"size":2964,"mtime":1662350852286,"results":"57","hashOfConfig":"31"},{"size":122,"mtime":1662350852284,"results":"58","hashOfConfig":"31"},{"size":113,"mtime":1662350852285,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"18q8ntq",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"63"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\성의현\\Desktop\\grad\\src\\index.js",[],[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\App.js",["154"],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\apiUrl.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\root\\LoginMain.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\HomeMain.js",["155","156"],[],"import { useState, useEffect } from 'react';\r\nimport Style from \"./HomeMain.module.css\";\r\nimport Logo from \"../../../logo/mainLogo\";\r\nimport SearchBar from \"./searchBar\";\r\nimport NumberNotice from \"./numberNotice\";\r\n\r\nimport LeftPage from \"../leftInner/page/page\";\r\nimport LeftPageList from \"../leftInner/pageList/pageList\";\r\nimport LeftChat from \"../leftInner/chat/chat\";\r\nimport LeftNewPost from \"../leftInner/newPost/newPost\";\r\nimport LeftSetting from \"../leftInner/setting/settingMain\";\r\n\r\nimport RightNewPost from \"../rightInner/newPost/newPost\";\r\nimport RightChat from \"../rightInner/chat/chat\";\r\nimport RightNotice from \"../rightInner/notice/notice\";\r\nimport RightFriend from \"../rightInner/friend/friend\";\r\nimport RightSetting from \"../rightInner/setting/setting\";\r\n\r\nconst Home = ({ logout }) => {\r\n  \r\n  //오른쪽 책의 내용을 바꿔주는 state => newPost // chat // notice // friend // setting\r\n  const [rightBookState, setRightBookState] = useState(\"friend\");\r\n  //왼쪽 책의 내용을 바꿔주는 state => page(글) // pageList //chat // newPost // setting\r\n  const [leftBookState, setLeftBookState] = useState(\"page\");\r\n  //setting의 내용을 바꿔주는 state => initial(클릭 없음) // profile // Snotice // password // filtering // block\r\n  const [settingState, setSettingState] = useState(\"initial\");\r\n\r\n  //첫 render시 친구 tag를 칠해준다.\r\n  const firstRender = () => {\r\n    document.querySelector(\"#friend\").style.backgroundColor = \"rgb(145, 145, 145)\";\r\n  };\r\n  useEffect(firstRender, []);\r\n\r\n  //우측 태그 클릭 hander\r\n  const tagClickHandler = (event) =>{\r\n    event.preventDefault();\r\n    const targetID = event.target.id;//누른 위치\r\n    if(targetID === rightBookState) return; //같은 태그를 여러번 누르는 경우 아무 변화도 주지 않는다.\r\n    \r\n    //태그 색상 변경\r\n    document.querySelector(`#${targetID}`).style.backgroundColor = \"rgb(145, 145, 145)\";//누른 버튼 어둡게 변경\r\n    document.querySelector(`#${rightBookState}`).style.backgroundColor = \"rgb(190, 190, 190)\";//원래 눌려있던 버튼 밝게 변경\r\n\r\n    if(targetID === \"setting\" || targetID === 'newPost'){\r\n      setRightBookState(targetID);\r\n      setLeftBookState(targetID);\r\n    }\r\n    else{\r\n      if(leftBookState === 'setting' || leftBookState === 'newPost') setLeftBookState(\"page\");\r\n      setRightBookState(targetID);\r\n    }\r\n\r\n    if(settingState !== 'initial'){//다른 태그 클릭 시 설정을 다시 원래대로 돌린다.\r\n      setSettingState('initial');\r\n    }\r\n  };\r\n\r\n  //우측 내용 클릭시 좌측 내용 변화 함수\r\n  //채팅, 알림, 친구의 경우 이 함수를 사용해야 좌측이 달라진다.\r\n  const leftChange = (val) => {\r\n    setLeftBookState(val);\r\n  };\r\n\r\n  //setting 변경 함수\r\n  const SettingChangeHandler = (val) => {\r\n    setSettingState(val);\r\n  }\r\n\r\n  return(\r\n    <div className={Style.pageCover}>\r\n      {/* 좌 상단 - 로고와 검색창 */}\r\n      <div className={Style.Cover}>\r\n        <div className={Style.leftHeader}>\r\n          <Logo />\r\n          <div />\r\n          <SearchBar />\r\n        </div>\r\n      </div>\r\n      {/* 우 상단 - 태그 */}\r\n      <div className={Style.Cover}>\r\n        <div className={Style.tagArea}>\r\n          <div className={Style.Cover}>\r\n            <div className={Style.tag} onClick={tagClickHandler} id=\"newPost\">글</div>\r\n          </div>\r\n          <div className={Style.Cover}>\r\n            <div className={Style.tag} onClick={tagClickHandler} id=\"chat\">챗</div>\r\n          </div>\r\n          <div className={Style.Cover}>\r\n            <div className={Style.tag} onClick={tagClickHandler} id=\"notice\">알</div>\r\n          </div>\r\n          <div className={Style.Cover}>\r\n            <div className={Style.tag} onClick={tagClickHandler} id=\"friend\">친</div>\r\n          </div>\r\n          <div className={Style.Cover}>\r\n            <div className={Style.tag} onClick={tagClickHandler} id=\"setting\">설</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 좌측 페이지 */}\r\n      <div className={Style.Cover}>\r\n        <div className={Style.bookCover}>\r\n          <div className={Style.leftbook}>\r\n            <div className={Style.Cover}>\r\n                {leftBookState === \"page\" ? <LeftPage /> : null}\r\n                {leftBookState === \"pageList\" ? <LeftPageList /> : null}\r\n                {leftBookState === \"chat\" ? <LeftChat /> : null}\r\n                {leftBookState === \"newPost\" ? <LeftNewPost /> : null}\r\n                {leftBookState === \"setting\" ? <LeftSetting settingState={settingState} /> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 우측 페이지 */}\r\n      <div className={Style.Cover}>\r\n      <div className={Style.bookCover}>\r\n          <div className={Style.rightbook}>\r\n            <div className={Style.Cover}>\r\n              { rightBookState === \"newPost\" ? <RightNewPost /> :  null}\r\n              { rightBookState === \"chat\" ? <RightChat /> : null}\r\n              { rightBookState === \"notice\" ? <RightNotice /> : null}\r\n              { rightBookState === \"friend\" ? <RightFriend /> : null}\r\n              { rightBookState === \"setting\" ? <RightSetting settingState={settingState} SettingChangeHandler={SettingChangeHandler} logout={logout} /> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default Home;","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\root\\mainInnerStuff.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\logo\\loginLogo.js",["157"],[],"import Style from \"./loginLogo.module.css\";\r\nimport logo from \"./logo.png\";\r\n\r\n//나중에 a안에 이미지로 변경하기. 그 이미지 스타일도 만들어야함 반응형으로 만들면 좋을듯\r\nconst Logo = () =>{\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        window.location.href= '/';\r\n    }\r\n    return(\r\n        <div className={Style.logoCover}>\r\n            <img src={logo} className={Style.logo} onClick={clickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","C:\\Users\\성의현\\Desktop\\grad\\src\\logo\\mainLogo.js",["158"],[],"import Style from \"./mainLogo.module.css\";\r\nimport logo from \"./logo.png\";\r\n\r\n//나중에 a안에 이미지로 변경하기. 그 이미지 스타일도 만들어야함 반응형으로 만들면 좋을듯\r\nconst Logo = () =>{\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        window.location.href= '/main';\r\n    }\r\n    return(\r\n        <div className={Style.logoCover}>\r\n            <img className={Style.logo} src={logo} onClick={clickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\searchBar.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\numberNotice.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\newPost\\newPost.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\notice\\notice.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\friend\\friend.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\chat\\chat.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\rightInner\\setting\\setting.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\settingMain.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\page\\page.js",["159","160","161"],[],"import { useState, useEffect } from 'react';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport axios from 'axios';\r\nimport Style from './page.module.css';\r\nimport {\r\n    pageloadUrl,\r\n} from \"../../../../apiUrl\";\r\n\r\nconst pageList = [1,2,3,4,5];\r\nconst currentStartId = 987654321;\r\n\r\nconst Pages = ({ obj, lastRef }) => {\r\n    return(\r\n        <div className={Style.singlePageCover}>\r\n            {\r\n                obj.map((data, index) => (\r\n                    index === (obj.length - 1) ? \r\n                    <p key={index} ref={lastRef}>last obj</p>\r\n                    :\r\n                    <p key={index}>{data}</p>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst LeftPage = () => {\r\n    const [ref, inView] = useInView();//ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다.\r\n\r\n    const pageLoadFunc = () => {\r\n        if(inView){\r\n            axios.get(pageloadUrl + \"?startId=\" + currentStartId)\r\n            .then((res) => {\r\n                console.log(\"데이터 추가\");\r\n                pageList = [...res.data];//추가 데이터 저장\r\n                currentStartId = res.startId;\r\n            })\r\n            .catch((res) => {\r\n                console.log(\"더이상 글이 없습니다.\");\r\n                console.log(res);\r\n            })\r\n        }\r\n    };\r\n    useEffect(pageLoadFunc, [inView]);\r\n    return(\r\n        <div className={Style.pageCover}>\r\n            <Pages obj={pageList} lastRef={ref}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftPage;\r\n\r\n","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\pageList\\pageList.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\chat\\chat.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\newPost\\newPost.js",["162","163"],[],"import Style from './newPost.module.css';\r\nimport { useState } from 'react';\r\n\r\nconst LeftNewPost = () => {\r\n    const [hashtag, setHashtag] = useState(\"\");\r\n    const [word, setWord] = useState(\"\");\r\n    const [media, setMedia] = useState([]);\r\n    const [hashtagList, setHashtagList] = useState([]);\r\n\r\n    //글 내용 변경 함수\r\n    const wordHandler = (event) => {\r\n        event.preventDefault();\r\n        setWord(event.target.value);\r\n    }\r\n\r\n    //hashtag영역 바꿔주는 함수\r\n    const hashtagHandler = (event) => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n        if(value[value.length - 1] === \",\"){// 이 경우 \r\n            setHashtagList((cur) => cur.push(value.slice(0,-1)));\r\n            setHashtag(\"\");\r\n        }\r\n        else{\r\n            setHashtag(value);\r\n        }\r\n    }\r\n\r\n    //hashtag 지우는 함수\r\n    const deleteTag = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target.value);\r\n        hashtagList.splice(Number(event.target.value), 1);\r\n    };\r\n\r\n    //글 올리는 함수\r\n\r\n    return(\r\n        <form className={Style.WholeCover} >\r\n            {/* 드래그 앤 드롭 영역 */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.picture}>\r\n                    이미지 또는 비디오를 드래그 앤 드롭 하시거나\r\n                    여기를 눌러 시작하세요.\r\n                </div>\r\n            </div>\r\n            {/* hashtag label 영역 */}\r\n            <div className={Style.Cover}>\r\n                <p className={Style.hashtag}>키워드 (,로 분리해주세요)</p>\r\n            </div>\r\n            {/* hashtag input 영역 */}\r\n            <div className={Style.Cover}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={hashtag}\r\n                    onChange={hashtagHandler}\r\n                    className={Style.hashtagInput}\r\n                />\r\n            </div>\r\n            {/* hashtag list 영역 */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.tagListArea}>\r\n                    <div className={Style.Cover}>\r\n                        {\r\n                            hashtagList.map((data, index) =>(\r\n                                <button className={Style.singleHashTag} key={index} onClick={deleteTag} value={index}>\r\n                                    #{data} \r\n                                </button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* word label 영역 */}\r\n            <div className={Style.Cover}>\r\n                <p className={Style.word}>글을 입력해 주세요</p>\r\n            </div>\r\n            {/* word input 영역 */}\r\n            <div className={Style.Cover}>\r\n                <input \r\n                    type=\"text\" \r\n                    vaslue={word}\r\n                    onChange={wordHandler}\r\n                    className={Style.wordInput} />\r\n            </div>\r\n            {/* 글 제출 영역 */}\r\n            <div className={Style.Cover}>\r\n                <button type=\"submit\" className={Style.submitButton}>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LeftNewPost;","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerMain.js",["164","165"],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerSignUp.js",["166"],[],"//회원가입 부분\r\nimport {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Style from './innerSignUp.module.css';\r\nimport {\r\n    signUpApiUrl,\r\n    emailApiUrl,\r\n    loginApiUrl\r\n} from \"../../../apiUrl\";\r\n\r\nconst SignUp = ({login, toLoginPage}) => {\r\n    //변수 선언\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [age, setAge] = useState(0);\r\n    const [ageAgree, setAgeAgree] = useState(false);\r\n    const [gender, setGender] = useState(\"\");\r\n    const [genderAgree, setGenderAgree] = useState(false);\r\n    const [emailAccept, setEmailAccept] = useState(false);\r\n    const [passwordInvalid, setPasswordInvalid] = useState(false);\r\n\r\n    //input변경 처리\r\n    const emailHandler = (event) => {\r\n        event.preventDefault();\r\n        setEmail(event.target.value);\r\n    };\r\n    const passwordHandler = (event) => {\r\n        event.preventDefault();\r\n        setPassword(event.target.value);\r\n        setPasswordCheck(\"\");\r\n    };\r\n    const passwordCheckHandler = (event) => {\r\n        event.preventDefault();\r\n        setPasswordCheck(event.target.value);\r\n    };\r\n    const nicknameHandler = (event) => {\r\n        event.preventDefault();\r\n        setNickname(event.target.value);\r\n    };\r\n    const ageHandler = (event) => {\r\n        event.preventDefault();\r\n        if(event.target.value >= 0){\r\n            setAge(event.target.value);\r\n        }\r\n    };\r\n    const ageAgreeHandler = () => {\r\n        setAgeAgree((current)=> !current);\r\n    };\r\n    const genderHandler = (event) => {\r\n        setGender(event.target.id);\r\n    };\r\n    const genderAgreeHandler = () => {\r\n        setGenderAgree((current)=> !current);\r\n    };\r\n\r\n    //비밀번호 유효성 확인 함수\r\n    function passwordValidCheck(str){\r\n        const PWD_RULE =  /^(?=.*[a-zA-Z])((?=.*\\d)(?=.*\\W)).{8,16}$/;\r\n        return str.match(PWD_RULE);\r\n    }\r\n    //비밀번호 유효성 확인함수 실행부분\r\n    const passwordValid = () => {\r\n        if(passwordValidCheck(password)){\r\n            setPasswordInvalid(true);\r\n            document.querySelector(\"#validPasswordColorWord\").style.color = \"rgb(102, 181, 255)\";\r\n        }\r\n        else{\r\n            setPasswordInvalid(false);\r\n            document.querySelector(\"#validPasswordColorWord\").style.color = \"rgb(255, 102, 102)\";\r\n        }\r\n    }\r\n    useEffect(passwordValid, [password]);\r\n\r\n    //비밀번호 check확인 함수\r\n    const passwordCheckFunc = () => {\r\n        if(password !== passwordCheck){\r\n            document.querySelector(\"#passwordCheckInput\").style.border = \"solid 2px rgb(255, 102, 102)\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#passwordCheckInput\").style.border = \"solid 1px rgb(186, 186, 186)\";\r\n        }\r\n    };\r\n    useEffect(passwordCheckFunc, [passwordCheck]);\r\n\r\n    //input재클릭 시 자동으로 전체선택 해주는 함수\r\n    const onfocusHandler = (event) => {\r\n        event.target.select();\r\n    };\r\n\r\n    //이메일 인증처리 함수\r\n    const emailSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(email === '') {\r\n            alert(\"이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n        if(!email.includes(\"@\") || !email.includes(\".\")){\r\n            alert(\"올바른 이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n\r\n        axios.post(emailApiUrl, {\r\n            email: email,\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                alert(\"인증 메일을 보냈습니다.\");\r\n                document.querySelector(\"#emailInput\").disabled = true;\r\n                setEmailAccept(true);\r\n            })\r\n            .catch((res)=> {\r\n                console.log(res);\r\n                alert(\"에러 발생 다시 시도해주십시오\");\r\n                document.querySelector(\"#emailInput\").select();\r\n            });\r\n    };\r\n\r\n    //회원가입 처리 함수\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(email === '' || password === '' || passwordCheck === '' || nickname === '' || age === 0 || gender === ''){\r\n            alert(\"정보를 모두 입력해 주십시오.\")\r\n            return;\r\n        }\r\n        if(password !== passwordCheck) {\r\n            alert(\"비밀번호를 다시 확인해 주십시오.\");\r\n            return;\r\n        }\r\n        if(!emailAccept) {\r\n            alert(\"이메일 인증을 먼저 해주십시오.\");\r\n            return;\r\n        }\r\n        if(!passwordInvalid) { \r\n            alert(\"비밀번호의 조건을 맞춰주십시오.\");\r\n            return;\r\n        }\r\n\r\n        axios.post(signUpApiUrl, {\r\n                email: email,\r\n                password: password,\r\n                nickname: nickname,\r\n                age: age,\r\n                gender: gender,\r\n                ageVisible: ageAgree,\r\n                genderVisible: genderAgree,\r\n        })\r\n        .then((res) => {\r\n            alert(\"회원가입 되셨습니다.\");\r\n            //즉시 로그인 Api호출\r\n            axios.post(loginApiUrl, {\r\n                email: email,\r\n                password: password,\r\n            })\r\n            .then((res) => {\r\n                login(res);\r\n                window.location.href=\"/main\";\r\n            })\r\n            .catch((res) => {\r\n                alert(\"문제 발생. 다시 로그인 시도해주십시오.\");\r\n                toLoginPage();//로그인화면으로 이동\r\n            });\r\n        })\r\n        .catch((res) =>{\r\n            if(res.response.status === 400){\r\n                alert(\"이미 가입된 이메일입니다.\");\r\n                document.querySelector(\"#emailInput\").disabled = false;\r\n                setEmailAccept(false);\r\n                document.querySelector(\"#emailInput\").select();\r\n            }\r\n            else{\r\n                console.log(\"error\");\r\n                console.log(res);\r\n            }\r\n        });\r\n    };\r\n\r\n    return(\r\n        <form className={Style.SignUpCover} onSubmit={submitHandler}>\r\n            {/* 이메일 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"emailInput\">\r\n                    Email\r\n                </label>\r\n            </div>\r\n            {/* 이메일 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <input \r\n                            id=\"emailInput\"\r\n                            type=\"email\"\r\n                            className={Style.formInput}\r\n                            value={email}\r\n                            onChange={emailHandler}\r\n                            onFocus={onfocusHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <button\r\n                            className={Style.emailButton}\r\n                            onClick={emailSubmitHandler}>\r\n                            인증\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* 비밀번호 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"passwordInput\">\r\n                    Password  \r\n                </label>\r\n                <p id=\"validPasswordColorWord\" className={Style.smallAlertWord}>  (8~16자리, 소문자, 특수문자를 하나이상 포함.)</p>\r\n            </div>\r\n            {/* 비밀번호 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"passwordInput\"\r\n                    type=\"password\"\r\n                    className={Style.formInput}\r\n                    value={password}\r\n                    onChange={passwordHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 비밀번호 확인 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"passwordCheckInput\">\r\n                    Password 확인\r\n                </label>\r\n            </div>\r\n            {/* 비밀번호 확인 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"passwordCheckInput\"\r\n                    type=\"password\"\r\n                    className={Style.formInput}\r\n                    value={passwordCheck}\r\n                    onChange={passwordCheckHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 닉네임 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"nicknameInput\">\r\n                    Nickname\r\n                </label>\r\n            </div>\r\n            {/* 닉네임 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"nicknameInput\"\r\n                    type=\"text\"\r\n                    className={Style.formInput}\r\n                    value={nickname}\r\n                    onChange={nicknameHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 나이 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"ageInput\">\r\n                    나이\r\n                </label>\r\n                <p className={Style.smallCommentWord}> 해당 정보를 공개하려면 체크해주세요.</p>\r\n            </div>\r\n            {/* 나이 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"ageInput\"\r\n                            type=\"number\"\r\n                            className={Style.formInput}\r\n                            value={age}\r\n                            onChange={ageHandler}\r\n                            onFocus={onfocusHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"ageAgree\"\r\n                            type=\"checkbox\"\r\n                            className={Style.agreeInput}\r\n                            onChange={ageAgreeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* 성별 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}>\r\n                    성별\r\n                </label>\r\n                <p className={Style.smallCommentWord}> 해당 정보를 공개하려면 체크해주세요.</p>\r\n            </div>\r\n            {/* 성별 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.genderInputArea}>\r\n                            <div className={Style.Cover}>\r\n                                <input\r\n                                    id=\"MALE\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    className={Style.genderInput}\r\n                                    onChange={genderHandler}\r\n                                />\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <label htmlFor=\"MALE\" className={Style.genderLabel}>남</label>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <input\r\n                                    id=\"FEMALE\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    className={Style.genderInput}\r\n                                    onChange={genderHandler}\r\n                                />\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <label htmlFor=\"FEMALE\" className={Style.genderLabel}>여</label>\r\n                            </div>\r\n                            <div />\r\n                        </div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"genderAgree\"\r\n                            type=\"checkbox\"\r\n                            className={Style.agreeInput}\r\n                            onChange={genderAgreeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.btnArea}>\r\n                    <div />\r\n                    <div className={Style.Cover}>\r\n                        <button \r\n                            onClick={toLoginPage}\r\n                            type=\"button\"\r\n                            className={Style.cancelBtn}\r\n                            value=\"0\">\r\n                            취 소\r\n                        </button>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={Style.submitBtn}>\r\n                            가 입\r\n                        </button>\r\n                    </div>\r\n                    <div />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Login\\inner\\innerFindPW.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\root\\profile.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\passwordSetting.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\blockSetting.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\profileSetting.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\filteringSetting.js",[],[],"C:\\Users\\성의현\\Desktop\\grad\\src\\routes\\Home\\leftInner\\setting\\noticeSetting.js",[],[],{"ruleId":"167","severity":1,"message":"168","line":6,"column":3,"nodeType":"169","messageId":"170","endLine":6,"endColumn":11},{"ruleId":"167","severity":1,"message":"171","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"172","line":60,"column":9,"nodeType":"169","messageId":"170","endLine":60,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":12,"column":13,"nodeType":"175","endLine":12,"endColumn":77},{"ruleId":"173","severity":1,"message":"174","line":12,"column":13,"nodeType":"175","endLine":12,"endColumn":77},{"ruleId":"167","severity":1,"message":"176","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":36,"column":17,"nodeType":"169","messageId":"179","endLine":36,"endColumn":25},{"ruleId":"177","severity":1,"message":"180","line":37,"column":17,"nodeType":"169","messageId":"179","endLine":37,"endColumn":31},{"ruleId":"167","severity":1,"message":"181","line":7,"column":12,"nodeType":"169","messageId":"170","endLine":7,"endColumn":17},{"ruleId":"167","severity":1,"message":"182","line":7,"column":19,"nodeType":"169","messageId":"170","endLine":7,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":132,"column":33,"nodeType":"175","endLine":132,"endColumn":96},{"ruleId":"173","severity":1,"message":"174","line":140,"column":33,"nodeType":"175","endLine":140,"endColumn":96},{"ruleId":"183","severity":1,"message":"184","line":85,"column":34,"nodeType":"185","endLine":85,"endColumn":49,"suggestions":"186"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NumberNotice' is defined but never used.","'leftChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-const-assign","'pageList' is constant.","const","'currentStartId' is constant.","'media' is assigned a value but never used.","'setMedia' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["187"],{"desc":"188","fix":"189"},"Update the dependencies array to be: [password, passwordCheck]",{"range":"190","text":"191"},[2850,2865],"[password, passwordCheck]"]