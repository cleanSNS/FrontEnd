[{"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\index.js":"1","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\App.js":"2","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\apiUrl.js":"3","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\root\\LoginMain.js":"4","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\HomeMain.js":"5","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\root\\mainInnerStuff.js":"6","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\searchBar.js":"7","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\numberNotice.js":"8","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\logo\\loginLogo.js":"9","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\logo\\mainLogo.js":"10","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\chat\\chat.js":"11","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\pageList\\pageList.js":"12","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\settingMain.js":"13","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\notice\\notice.js":"14","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\chat\\chat.js":"15","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\friend\\friend.js":"16","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\page\\page.js":"17","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\newPost\\newPost.js":"18","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\newPost\\newPost.js":"19","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\setting\\setting.js":"20","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerMain.js":"21","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerFindPW.js":"22","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerSignUp.js":"23","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\passwordSetting.js":"24","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\blockSetting.js":"25","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\profileSetting.js":"26","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\noticeSetting.js":"27","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\filteringSetting.js":"28","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\profile.js":"29"},{"size":197,"mtime":1660317272440,"results":"30","hashOfConfig":"31"},{"size":3092,"mtime":1663028581767,"results":"32","hashOfConfig":"31"},{"size":1481,"mtime":1663028581767,"results":"33","hashOfConfig":"31"},{"size":970,"mtime":1663028581784,"results":"34","hashOfConfig":"31"},{"size":9627,"mtime":1663141109724,"results":"35","hashOfConfig":"31"},{"size":1108,"mtime":1660887431124,"results":"36","hashOfConfig":"31"},{"size":462,"mtime":1662527949423,"results":"37","hashOfConfig":"31"},{"size":298,"mtime":1662527965067,"results":"38","hashOfConfig":"31"},{"size":524,"mtime":1663028581768,"results":"39","hashOfConfig":"31"},{"size":527,"mtime":1663028581769,"results":"40","hashOfConfig":"31"},{"size":97,"mtime":1659950734075,"results":"41","hashOfConfig":"31"},{"size":109,"mtime":1660127178625,"results":"42","hashOfConfig":"31"},{"size":820,"mtime":1660266710909,"results":"43","hashOfConfig":"31"},{"size":1189,"mtime":1660624398856,"results":"44","hashOfConfig":"31"},{"size":98,"mtime":1659686741887,"results":"45","hashOfConfig":"31"},{"size":1642,"mtime":1660809201985,"results":"46","hashOfConfig":"31"},{"size":1595,"mtime":1663028581774,"results":"47","hashOfConfig":"31"},{"size":8280,"mtime":1663145881726,"results":"48","hashOfConfig":"31"},{"size":17142,"mtime":1663028581774,"results":"49","hashOfConfig":"31"},{"size":2377,"mtime":1663028581774,"results":"50","hashOfConfig":"31"},{"size":5698,"mtime":1663028581784,"results":"51","hashOfConfig":"31"},{"size":2604,"mtime":1663028581783,"results":"52","hashOfConfig":"31"},{"size":14199,"mtime":1663028581784,"results":"53","hashOfConfig":"31"},{"size":119,"mtime":1660266693372,"results":"54","hashOfConfig":"31"},{"size":110,"mtime":1660266676677,"results":"55","hashOfConfig":"31"},{"size":2964,"mtime":1660812428418,"results":"56","hashOfConfig":"31"},{"size":113,"mtime":1660266688170,"results":"57","hashOfConfig":"31"},{"size":122,"mtime":1660266683612,"results":"58","hashOfConfig":"31"},{"size":484,"mtime":1662527932887,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1whsse7",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"63"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\index.js",[],[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\App.js",["155"],[],"import axios from 'axios';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport Home from \"./routes/Home/root/HomeMain\";\r\nimport Login from \"./routes/Login/root/LoginMain\";\r\nimport { logoutApiUrl, KakaoTokenUrl, NaverTokenUrl } from './apiUrl';\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n\r\n  //로그인시 refresh token을 local Storage에 저장하는 기능 앞에 Bearer 가 붙어있다.\r\n  const loginFunc = (res) => {\r\n    console.log(res);\r\n    //alert(\"Welcome\");\r\n    localStorage.setItem(\"rft\", res.headers.authorization);\r\n    window.location.href=\"/main\";\r\n  };\r\n\r\n  //로그아웃 함수\r\n  const logoutFunc = () => {\r\n    axios.get(logoutApiUrl)\r\n    .then((res) => {\r\n      console.log(res);\r\n      alert(\"logout success\");\r\n      localStorage.removeItem(\"rft\");//refresh token 지우기\r\n      window.location.href=\"/\";\r\n    })\r\n    .catch((res)=>{\r\n      console.log(\"error\")\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  //카카오 로그인 시 토큰을 프론트로 받게 되는 경우 처리하는 함수\r\n  const socialLogin = () => {\r\n    if(localStorage.getItem(\"rft\") === \"kakao\"){//소셜 처리중인 경우\r\n      const params = new URL(window.location.href).searchParams;\r\n      const code = params.get(\"code\");\r\n      console.log(code);\r\n      axios.post(KakaoTokenUrl + code)\r\n      .then((res) => {//문제가 없는 경우이므로, 로그인 해준다.\r\n        console.log(res);\r\n        loginFunc(res);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        alert(\"소셜 로그인에 문제가 발생했습니다.\");\r\n        localStorage.removeItem(\"rft\");//소셜 상태를 종료한다.\r\n        window.location.href = \"/\";//다시 원래의 로그인 url로 이동한다.\r\n      });\r\n    }\r\n    else if(localStorage.getItem(\"rft\") === \"naver\"){//소셜 처리중인 경우\r\n      const params = new URL(window.location.href).searchParams;\r\n      const code = params.get(\"code\");\r\n      console.log(code);\r\n      axios.post(NaverTokenUrl + code)\r\n      .then((res) => {//문제가 없는 경우이므로, 로그인 해준다.\r\n        console.log(res);\r\n        loginFunc(res);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        alert(\"소셜 로그인에 문제가 발생했습니다.\");\r\n        localStorage.removeItem(\"rft\");//소셜 상태를 종료한다.\r\n        window.location.href = \"/\";//다시 원래의 로그인 url로 이동한다.\r\n      });\r\n    }\r\n  };\r\n  useEffect(socialLogin, []);\r\n\r\n  return (\r\n    <Router>\r\n      {/*localStorage.getItem(\"rft\") === null ? <Redirect to='/' /> : null*/}\r\n      {/*localStorage.getItem(\"rft\") !== \"social\" && localStorage.getItem(\"rft\") !== null ?\r\n        <Redirect to=\"/main\" /> : null \r\n      */}\r\n      <Switch>\r\n        <Route path=\"/main\">\r\n          <Home logout={logoutFunc} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Login login={loginFunc} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\apiUrl.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\root\\LoginMain.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\HomeMain.js",["156","157","158","159","160","161","162"],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\root\\mainInnerStuff.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\searchBar.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\numberNotice.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\logo\\loginLogo.js",["163"],[],"import Style from \"./loginLogo.module.css\";\r\nimport logo from \"./logo.png\";\r\n\r\n//나중에 a안에 이미지로 변경하기. 그 이미지 스타일도 만들어야함 반응형으로 만들면 좋을듯\r\nconst Logo = () =>{\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        window.location.href= '/';\r\n    }\r\n    return(\r\n        <div className={Style.logoCover}>\r\n            <img src={logo} className={Style.logo} onClick={clickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\logo\\mainLogo.js",["164"],[],"import Style from \"./mainLogo.module.css\";\r\nimport logo from \"./logo.png\";\r\n\r\n//나중에 a안에 이미지로 변경하기. 그 이미지 스타일도 만들어야함 반응형으로 만들면 좋을듯\r\nconst Logo = () =>{\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        window.location.href= '/main';\r\n    }\r\n    return(\r\n        <div className={Style.logoCover}>\r\n            <img className={Style.logo} src={logo} onClick={clickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\chat\\chat.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\pageList\\pageList.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\settingMain.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\notice\\notice.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\chat\\chat.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\friend\\friend.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\page\\page.js",["165","166","167"],[],"import { useState, useEffect } from 'react';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport axios from 'axios';\r\nimport Style from './page.module.css';\r\nimport {\r\n    pageloadUrl,\r\n} from \"../../../../apiUrl\";\r\n\r\nconst pageList = [1,2,3,4,5];\r\nconst currentStartId = 987654321;\r\n\r\nconst Pages = ({ obj, lastRef }) => {\r\n    return(\r\n        <div className={Style.singlePageCover}>\r\n            {\r\n                obj.map((data, index) => (\r\n                    index === (obj.length - 1) ? \r\n                    <p key={index} ref={lastRef}>last obj</p>\r\n                    :\r\n                    <p key={index}>{data}</p>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst LeftPage = () => {\r\n    const [ref, inView] = useInView();//ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다.\r\n\r\n    const pageLoadFunc = () => {\r\n        if(inView){\r\n            axios.get(pageloadUrl + \"?startId=\" + currentStartId)\r\n            .then((res) => {\r\n                console.log(\"데이터 추가\");\r\n                pageList = [...res.data];//추가 데이터 저장\r\n                currentStartId = res.startId;\r\n            })\r\n            .catch((res) => {\r\n                console.log(\"더이상 글이 없습니다.\");\r\n                console.log(res);\r\n            })\r\n        }\r\n    };\r\n    useEffect(pageLoadFunc, [inView]);\r\n    return(\r\n        <div className={Style.pageCover}>\r\n            <Pages obj={pageList} lastRef={ref}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftPage;\r\n\r\n","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\newPost\\newPost.js",["168","169","170","171"],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\newPost\\newPost.js",["172"],[],"import Style from './newPost.module.css';\r\nimport {useEffect} from 'react';\r\n\r\nconst RightNewPost = ({newPostLikeNotice, setNewPostLikeNotice, newPostCommentNotice, setNewPostCommentNotice, newPostReadPostAuth, setNewPostReadPostAuth, newPostReadCommentAuth, setNewPostReadCommentAuth, newPostWriteCommentAuth, setNewPostWriteCommentAuth, newPostReadLikeAuth, setNewPostReadLikeAuth}) => {\r\n    //초기에 모든 허용을 진하게 만드는 함수 -- 변경해야한다. state확인해서 그에 맞게 변경해야한다.\r\n    const firstColoring = () => {\r\n        //좋아요 알림부분 반영\r\n        if(newPostLikeNotice){\r\n            document.querySelector(\"#likeNoticeAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#likeNoticeDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#likeNoticeAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#likeNoticeDenial\").style.fontWeight = \"600\";\r\n        }\r\n\r\n        //댓글 알림 부분 반영\r\n        if(newPostCommentNotice){\r\n            document.querySelector(\"#commentNoticeAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#commentNoticeDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#commentNoticeAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#commentNoticeDenial\").style.fontWeight = \"600\";\r\n        }\r\n\r\n        //읽기 권한 반영\r\n        if(newPostReadPostAuth === \"ALL\"){\r\n            document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else if(newPostReadPostAuth === \"FOLLOW_ONLY\"){\r\n            document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"600\";\r\n        }\r\n\r\n        //댓글 읽기 반영\r\n        if(newPostReadCommentAuth){\r\n            document.querySelector(\"#readCommentAuthAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#readCommentAuthDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#readCommentAuthAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readCommentAuthDenial\").style.fontWeight = \"600\";\r\n        }\r\n\r\n        //댓글 쓰기 반영\r\n        if(newPostWriteCommentAuth){\r\n            document.querySelector(\"#writeCommentAuthAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#writeCommentAuthDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#writeCommentAuthAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#writeCommentAuthDenial\").style.fontWeight = \"600\";\r\n        }\r\n        \r\n        //좋아요 읽기 반영\r\n        if(newPostReadLikeAuth){\r\n            document.querySelector(\"#readLikeAuthAllow\").style.fontWeight = \"600\";\r\n            document.querySelector(\"#readLikeAuthDenial\").style.fontWeight = \"400\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#readLikeAuthAllow\").style.fontWeight = \"400\";\r\n            document.querySelector(\"#readLikeAuthDenial\").style.fontWeight = \"600\";\r\n        }\r\n    };\r\n    useEffect(firstColoring, []);\r\n\r\n    //누른 설정을 반영하는 함수\r\n    //좋아요 알림\r\n    const likeNoticeClickHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(newPostLikeNotice){//지금 허용이 눌려있는 상황\r\n            if(clicked === \"likeNoticeDenial\"){//근데 거부를 누른 경우\r\n                document.querySelector(\"#likeNoticeAllow\").style.fontWeight = \"400\";//허용을 없앤다.\r\n                document.querySelector(\"#likeNoticeDenial\").style.fontWeight = \"600\";//거부를 누른다.\r\n                setNewPostLikeNotice(false);//거부로 변경\r\n            }\r\n        }\r\n        else{//거부가 눌려있는 상황\r\n            if(clicked === \"likeNoticeAllow\"){//근데 허용을 누른 경우\r\n                document.querySelector(\"#likeNoticeAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#likeNoticeDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostLikeNotice(true);//허용으로 설정\r\n            }\r\n        }\r\n    };\r\n    //댓글 알림\r\n    const commentNoticeClickHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(newPostCommentNotice){//지금 허용이 눌려있는 상황\r\n            if(clicked === \"commentNoticeDenial\"){//근데 거부를 누른 경우\r\n                document.querySelector(\"#commentNoticeAllow\").style.fontWeight = \"400\";//허용을 없앤다.\r\n                document.querySelector(\"#commentNoticeDenial\").style.fontWeight = \"600\";//거부를 누른다.\r\n                setNewPostCommentNotice(false);//거부로 변경\r\n            }\r\n        }\r\n        else{//거부가 눌려있는 상황\r\n            if(clicked === \"commentNoticeAllow\"){//근데 허용을 누른 경우\r\n                document.querySelector(\"#commentNoticeAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#commentNoticeDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostCommentNotice(true);//허용으로 설정\r\n            }\r\n        }\r\n    };\r\n    //읽기 권한 - 얘만 3개다.\r\n    const readPostAuthClickHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(clicked === \"readPostAuthAllow\"){//허용이 눌린 경우\r\n            if(newPostReadPostAuth !== \"ALL\"){//근데 이미 허용으로 되어있지 않은 경우\r\n                document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostReadPostAuth(\"ALL\");//허용으로 변경\r\n            }\r\n        }\r\n        else if(clicked === \"readPostAuthHalfAllow\"){//팔로우만 허용인 경우\r\n            if(newPostReadPostAuth !== \"FOLLOW_ONLY\"){//근데 이미 팔로우만 허용으로 되어있지 않은 경우\r\n                document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"400\";//허용을 누른다.\r\n                document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"600\";//거부를 없앤다.\r\n                document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostReadPostAuth(\"FOLLOW_ONLY\");//팔로우만 허용으로 변경\r\n            }\r\n        }\r\n        else{//거부인 경우\r\n            if(newPostReadPostAuth !== \"NONE\"){//근데 이미 거부로 되어있지 않은 경우\r\n                document.querySelector(\"#readPostAuthAllow\").style.fontWeight = \"400\";//허용을 누른다.\r\n                document.querySelector(\"#readPostAuthHalfAllow\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                document.querySelector(\"#readPostAuthDenial\").style.fontWeight = \"600\";//거부를 없앤다.\r\n                setNewPostReadPostAuth(\"NONE\");//거부로 변경\r\n            }\r\n        }\r\n    };\r\n    //댓글 읽기 권한\r\n    const readCommentAuthClickHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(newPostReadCommentAuth){//지금 허용이 눌려있는 상황\r\n            if(clicked === \"readCommentAuthDenial\"){//근데 거부를 누른 경우\r\n                document.querySelector(\"#readCommentAuthAllow\").style.fontWeight = \"400\";//허용을 없앤다.\r\n                document.querySelector(\"#readCommentAuthDenial\").style.fontWeight = \"600\";//거부를 누른다.\r\n                setNewPostReadCommentAuth(false);//거부로 변경\r\n            }\r\n        }\r\n        else{//거부가 눌려있는 상황\r\n            if(clicked === \"readCommentAuthAllow\"){//근데 허용을 누른 경우\r\n                document.querySelector(\"#readCommentAuthAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#readCommentAuthDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostReadCommentAuth(true);//허용으로 설정\r\n            }\r\n        }\r\n    };\r\n    //댓글 쓰기 권한\r\n    const writeCommentAuthHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(newPostWriteCommentAuth){//지금 허용이 눌려있는 상황\r\n            if(clicked === \"writeCommentAuthDenial\"){//근데 거부를 누른 경우\r\n                document.querySelector(\"#writeCommentAuthAllow\").style.fontWeight = \"400\";//허용을 없앤다.\r\n                document.querySelector(\"#writeCommentAuthDenial\").style.fontWeight = \"600\";//거부를 누른다.\r\n                setNewPostWriteCommentAuth(false);//거부로 변경\r\n            }\r\n        }\r\n        else{//거부가 눌려있는 상황\r\n            if(clicked === \"writeCommentAuthAllow\"){//근데 허용을 누른 경우\r\n                document.querySelector(\"#writeCommentAuthAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#writeCommentAuthDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostWriteCommentAuth(true);//허용으로 설정\r\n            }\r\n        }\r\n    };\r\n    //좋아요 읽기 권한\r\n    const readLikeAuthClickHandler = (event) => {\r\n        const clicked = event.target.id;\r\n        if(newPostReadLikeAuth){//지금 허용이 눌려있는 상황\r\n            if(clicked === \"readLikeAuthDenial\"){//근데 거부를 누른 경우\r\n                document.querySelector(\"#readLikeAuthAllow\").style.fontWeight = \"400\";//허용을 없앤다.\r\n                document.querySelector(\"#readLikeAuthDenial\").style.fontWeight = \"600\";//거부를 누른다.\r\n                setNewPostReadLikeAuth(false);//거부로 변경\r\n            }\r\n        }\r\n        else{//거부가 눌려있는 상황\r\n            if(clicked === \"readLikeAuthAllow\"){//근데 허용을 누른 경우\r\n                document.querySelector(\"#readLikeAuthAllow\").style.fontWeight = \"600\";//허용을 누른다.\r\n                document.querySelector(\"#readLikeAuthDenial\").style.fontWeight = \"400\";//거부를 없앤다.\r\n                setNewPostReadLikeAuth(true);//허용으로 설정\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <div className={Style.WholeCover}>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCover}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>좋아요 알림</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.twoSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"likeNoticeAllow\" onClick={likeNoticeClickHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"likeNoticeDenial\" onClick={likeNoticeClickHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCover}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>댓글 알림</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.twoSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"commentNoticeAllow\" onClick={commentNoticeClickHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"commentNoticeDenial\" onClick={commentNoticeClickHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCover}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>읽기 권한</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.threeSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readPostAuthAllow\" onClick={readPostAuthClickHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readPostAuthHalfAllow\" onClick={readPostAuthClickHandler}>팔로우 된 사람만 허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readPostAuthDenial\" onClick={readPostAuthClickHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCover}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>댓글 읽기 권한</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.twoSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readCommentAuthAllow\" onClick={readCommentAuthClickHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readCommentAuthDenial\" onClick={readCommentAuthClickHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCover}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>댓글 쓰기 권한</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.twoSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"writeCommentAuthAllow\" onClick={writeCommentAuthHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"writeCommentAuthDenial\" onClick={writeCommentAuthHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.settingCoverLast}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.settingName}>좋아요 읽기 권한</div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.twoSetting}>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readLikeAuthAllow\" onClick={readLikeAuthClickHandler}>허용</div>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <div className={Style.settingTag} id=\"readLikeAuthDenial\" onClick={readLikeAuthClickHandler}>거부</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightNewPost","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\rightInner\\setting\\setting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerMain.js",["173","174"],[],"//로그인의 초기 화면. id, 비번을 쓰는 곳이 있다.\r\nimport { useState } from 'react';\r\nimport Style from './innerMain.module.css';\r\nimport KakaoImg from '../socialImg/Kakao.png';\r\nimport NaverImg from '../socialImg/Naver.png';\r\nimport axios from 'axios';\r\nimport {\r\n    loginApiUrl,\r\n    kakaoLoginUrl,\r\n    NaverLoginUrl,\r\n} from \"../../../apiUrl\";\r\n\r\nconst Main = ({toFindPasswordPage, toSignUpPage, login}) => {\r\n    //변수 선언\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [wrong, setWrong] = useState(\"0\");//가능한 값, clear(문제 없음), not user(이메일이나 비번이 틀린 경우)\r\n\r\n    //input 변경시 반영해주는 함수\r\n    const emailHandler = (event) =>{\r\n        event.preventDefault();\r\n        setEmail(event.target.value);\r\n    };\r\n    const passwordHandler = (event) => {\r\n        event.preventDefault();\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    //로그인 클릭 처리 함수\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(email === '') {\r\n            alert(\"이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n        if(password === '') {\r\n            alert(\"비밀번호를 입력해 주세요\");\r\n            return;\r\n        }\r\n        if(!email.includes(\"@\") || !email.includes(\".\")){\r\n            alert(\"올바른 이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n\r\n        axios.post(loginApiUrl, {\r\n            email: email,\r\n            password: password,\r\n        })\r\n            .then((res) => {\r\n                setWrong(\"clear\");\r\n                login(res);\r\n                window.location.href=\"/main\";\r\n            })\r\n            .catch((res) => {\r\n                console.log(res);\r\n                setWrong(\"not user\");\r\n            });\r\n    };\r\n\r\n    //카카오 로그인 처리 함수\r\n    const kakaoLoginHandler = (event) => {\r\n        event.preventDefault();\r\n        localStorage.setItem(\"rft\", \"kakao\");\r\n        window.location.href = kakaoLoginUrl;\r\n    };\r\n\r\n    //네이버 로그인 처리 함수 => 카카오와 내용은 동일하다.\r\n    const naverLoginHandler = (event) => {\r\n        event.preventDefault();\r\n        localStorage.setItem(\"rft\", \"naver\");\r\n        window.location.href = NaverLoginUrl;\r\n    };\r\n\r\n    return(\r\n        <form className={Style.loginInnerCover} onSubmit={submitHandler}>\r\n            {/* 아이디 */}\r\n            <div className={Style.Cover}>\r\n            <input \r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className={Style.formInput}\r\n                value={email}\r\n                onChange={emailHandler}/>\r\n            </div>\r\n            {/* 비밀번호 */}\r\n            <div className={Style.Cover}>\r\n            <input \r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={Style.formInput}\r\n                value={password}\r\n                onChange={passwordHandler}/>\r\n            </div>\r\n            {/* 경고문 */}\r\n            <div className={Style.Cover}>\r\n                {wrong === \"not user\" ? <p className={Style.errorMes}>잘못된 이메일 혹은 비밀번호입니다.</p> : null}\r\n            </div>\r\n            {/* 로그인버튼 */}\r\n            <div className={Style.Cover}>\r\n                <button \r\n                    className={Style.loginbtn}\r\n                    type=\"submit\">\r\n                    로 그 인\r\n                </button>\r\n            </div>\r\n            {/* 찾기와 회원가입 */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitCover}>\r\n                    <div />\r\n                    <div className={Style.Cover}>\r\n                        <p\r\n                            className={Style.word}\r\n                            onClick={toFindPasswordPage}>\r\n                            비밀번호 찾기\r\n                        </p>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <p\r\n                            className={Style.word}\r\n                            onClick={toSignUpPage}>\r\n                            회원 가입\r\n                        </p>\r\n                    </div>\r\n                    <div />\r\n                </div>\r\n            </div>\r\n            {/* 소셜 로그인 */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitCover}>\r\n                    <div />\r\n                    <div className={Style.Cover}>\r\n                        <button className={Style.Socialbtn} onClick={kakaoLoginHandler}>\r\n                            <div id=\"KakaoContainer\" className={Style.kakao}>\r\n                                <img id=\"symbol\" src={KakaoImg} className={Style.kakaoSymbol}/>\r\n                                <span id=\"label\" className={Style.kakaoLabel}>로그인</span>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <button className={Style.Socialbtn} onClick={naverLoginHandler}>\r\n                            <div id=\"NaverContainer\" className={Style.naver}>\r\n                                <img id=\"symbol\" src={NaverImg} className={Style.naverSymbol}/>\r\n                                <span id=\"label\" className={Style.naverLabel}>로그인</span>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                    <div />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerFindPW.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Login\\inner\\innerSignUp.js",["175"],[],"//회원가입 부분\r\nimport {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Style from './innerSignUp.module.css';\r\nimport {\r\n    signUpApiUrl,\r\n    emailApiUrl,\r\n    loginApiUrl\r\n} from \"../../../apiUrl\";\r\n\r\nconst SignUp = ({login, toLoginPage}) => {\r\n    //변수 선언\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [age, setAge] = useState(0);\r\n    const [ageAgree, setAgeAgree] = useState(false);\r\n    const [gender, setGender] = useState(\"\");\r\n    const [genderAgree, setGenderAgree] = useState(false);\r\n    const [emailAccept, setEmailAccept] = useState(false);\r\n    const [passwordInvalid, setPasswordInvalid] = useState(false);\r\n\r\n    //input변경 처리\r\n    const emailHandler = (event) => {\r\n        event.preventDefault();\r\n        setEmail(event.target.value);\r\n    };\r\n    const passwordHandler = (event) => {\r\n        event.preventDefault();\r\n        setPassword(event.target.value);\r\n        setPasswordCheck(\"\");\r\n    };\r\n    const passwordCheckHandler = (event) => {\r\n        event.preventDefault();\r\n        setPasswordCheck(event.target.value);\r\n    };\r\n    const nicknameHandler = (event) => {\r\n        event.preventDefault();\r\n        setNickname(event.target.value);\r\n    };\r\n    const ageHandler = (event) => {\r\n        event.preventDefault();\r\n        if(event.target.value >= 0){\r\n            setAge(event.target.value);\r\n        }\r\n    };\r\n    const ageAgreeHandler = () => {\r\n        setAgeAgree((current)=> !current);\r\n    };\r\n    const genderHandler = (event) => {\r\n        setGender(event.target.id);\r\n    };\r\n    const genderAgreeHandler = () => {\r\n        setGenderAgree((current)=> !current);\r\n    };\r\n\r\n    //비밀번호 유효성 확인 함수\r\n    function passwordValidCheck(str){\r\n        const PWD_RULE =  /^(?=.*[a-zA-Z])((?=.*\\d)(?=.*\\W)).{8,16}$/;\r\n        return str.match(PWD_RULE);\r\n    }\r\n    //비밀번호 유효성 확인함수 실행부분\r\n    const passwordValid = () => {\r\n        if(passwordValidCheck(password)){\r\n            setPasswordInvalid(true);\r\n            document.querySelector(\"#validPasswordColorWord\").style.color = \"rgb(102, 181, 255)\";\r\n        }\r\n        else{\r\n            setPasswordInvalid(false);\r\n            document.querySelector(\"#validPasswordColorWord\").style.color = \"rgb(218, 86, 86)\";\r\n        }\r\n    }\r\n    useEffect(passwordValid, [password]);\r\n\r\n    //비밀번호 check확인 함수\r\n    const passwordCheckFunc = () => {\r\n        if(password !== passwordCheck){\r\n            document.querySelector(\"#passwordCheckInput\").style.outline = \"solid 2px rgb(218, 86, 86)\";\r\n        }\r\n        else{\r\n            document.querySelector(\"#passwordCheckInput\").style.outline = \"solid 1px rgb(186, 186, 186)\";\r\n        }\r\n    };\r\n    useEffect(passwordCheckFunc, [passwordCheck]);\r\n\r\n    //input재클릭 시 자동으로 전체선택 해주는 함수\r\n    const onfocusHandler = (event) => {\r\n        event.target.select();\r\n    };\r\n\r\n    //이메일 인증처리 함수\r\n    const emailSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(email === '') {\r\n            alert(\"이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n        if(!email.includes(\"@\") || !email.includes(\".\")){\r\n            alert(\"올바른 이메일을 입력해 주세요\");\r\n            return;\r\n        }\r\n\r\n        axios.post(emailApiUrl, {\r\n            email: email,\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                alert(\"인증 메일을 보냈습니다.\");\r\n                document.querySelector(\"#emailInput\").disabled = true;\r\n                setEmailAccept(true);\r\n            })\r\n            .catch((res)=> {\r\n                console.log(res);\r\n                alert(\"에러 발생 다시 시도해주십시오\");\r\n                document.querySelector(\"#emailInput\").select();\r\n            });\r\n    };\r\n\r\n    //회원가입 처리 함수\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(email === '' || password === '' || passwordCheck === '' || nickname === '' || age === 0 || gender === ''){\r\n            alert(\"정보를 모두 입력해 주십시오.\")\r\n            return;\r\n        }\r\n        if(password !== passwordCheck) {\r\n            alert(\"비밀번호를 다시 확인해 주십시오.\");\r\n            return;\r\n        }\r\n        if(!emailAccept) {\r\n            alert(\"이메일 인증을 먼저 해주십시오.\");\r\n            return;\r\n        }\r\n        if(!passwordInvalid) { \r\n            alert(\"비밀번호의 조건을 맞춰주십시오.\");\r\n            return;\r\n        }\r\n\r\n        axios.post(signUpApiUrl, {\r\n                email: email,\r\n                password: password,\r\n                nickname: nickname,\r\n                age: age,\r\n                gender: gender,\r\n                ageVisible: ageAgree,\r\n                genderVisible: genderAgree,\r\n        })\r\n        .then((res) => {\r\n            alert(\"회원가입 되셨습니다.\");\r\n            //즉시 로그인 Api호출\r\n            axios.post(loginApiUrl, {\r\n                email: email,\r\n                password: password,\r\n            })\r\n            .then((res) => {\r\n                login(res);\r\n                window.location.href=\"/main\";\r\n            })\r\n            .catch((res) => {\r\n                alert(\"문제 발생. 다시 로그인 시도해주십시오.\");\r\n                toLoginPage();//로그인화면으로 이동\r\n            });\r\n        })\r\n        .catch((res) =>{\r\n            if(res.response.status === 400){\r\n                alert(\"이미 가입된 이메일입니다.\");\r\n                document.querySelector(\"#emailInput\").disabled = false;\r\n                setEmailAccept(false);\r\n                document.querySelector(\"#emailInput\").select();\r\n            }\r\n            else{\r\n                console.log(\"error\");\r\n                console.log(res);\r\n            }\r\n        });\r\n    };\r\n\r\n    return(\r\n        <form className={Style.SignUpCover} onSubmit={submitHandler}>\r\n            {/* 이메일 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"emailInput\">\r\n                    Email\r\n                </label>\r\n            </div>\r\n            {/* 이메일 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <input \r\n                            id=\"emailInput\"\r\n                            type=\"email\"\r\n                            className={Style.formInput}\r\n                            value={email}\r\n                            onChange={emailHandler}\r\n                            onFocus={onfocusHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <button\r\n                            className={Style.emailButton}\r\n                            onClick={emailSubmitHandler}>\r\n                            인증\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* 비밀번호 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"passwordInput\">\r\n                    Password  \r\n                </label>\r\n                <p id=\"validPasswordColorWord\" className={Style.smallAlertWord}>  (8~16자리, 소문자, 특수문자를 하나이상 포함.)</p>\r\n            </div>\r\n            {/* 비밀번호 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"passwordInput\"\r\n                    type=\"password\"\r\n                    className={Style.formInput}\r\n                    value={password}\r\n                    onChange={passwordHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 비밀번호 확인 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"passwordCheckInput\">\r\n                    Password 확인\r\n                </label>\r\n            </div>\r\n            {/* 비밀번호 확인 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"passwordCheckInput\"\r\n                    type=\"password\"\r\n                    className={Style.formInput}\r\n                    value={passwordCheck}\r\n                    onChange={passwordCheckHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 닉네임 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"nicknameInput\">\r\n                    Nickname\r\n                </label>\r\n            </div>\r\n            {/* 닉네임 Input */}\r\n            <div className={Style.Cover}>\r\n                <input\r\n                    id=\"nicknameInput\"\r\n                    type=\"text\"\r\n                    className={Style.formInput}\r\n                    value={nickname}\r\n                    onChange={nicknameHandler}\r\n                    onFocus={onfocusHandler}\r\n                />\r\n            </div>\r\n            {/* 나이 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}\r\n                    htmlFor=\"ageInput\">\r\n                    나이\r\n                </label>\r\n                <p className={Style.smallCommentWord}> 해당 정보를 공개하려면 체크해주세요.</p>\r\n            </div>\r\n            {/* 나이 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"ageInput\"\r\n                            type=\"number\"\r\n                            className={Style.formInput}\r\n                            value={age}\r\n                            onChange={ageHandler}\r\n                            onFocus={onfocusHandler}\r\n                        />\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"ageAgree\"\r\n                            type=\"checkbox\"\r\n                            className={Style.agreeInput}\r\n                            onChange={ageAgreeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* 성별 Label */}\r\n            <div className={Style.Cover}>\r\n                <label \r\n                    className={Style.formLabel}>\r\n                    성별\r\n                </label>\r\n                <p className={Style.smallCommentWord}> 해당 정보를 공개하려면 체크해주세요.</p>\r\n            </div>\r\n            {/* 성별 Input */}\r\n            <div className={Style.Cover}>\r\n                <div className={Style.splitInput}>\r\n                    <div className={Style.Cover}>\r\n                        <div className={Style.genderInputArea}>\r\n                            <div className={Style.Cover}>\r\n                                <input\r\n                                    id=\"MALE\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    className={Style.genderInput}\r\n                                    onChange={genderHandler}\r\n                                />\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <label htmlFor=\"MALE\" className={Style.genderLabel}>남</label>\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <input\r\n                                    id=\"FEMALE\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    className={Style.genderInput}\r\n                                    onChange={genderHandler}\r\n                                />\r\n                            </div>\r\n                            <div className={Style.Cover}>\r\n                                <label htmlFor=\"FEMALE\" className={Style.genderLabel}>여</label>\r\n                            </div>\r\n                            <div />\r\n                        </div>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <input\r\n                            id=\"genderAgree\"\r\n                            type=\"checkbox\"\r\n                            className={Style.agreeInput}\r\n                            onChange={genderAgreeHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={Style.Cover}>\r\n                <div className={Style.btnArea}>\r\n                    <div />\r\n                    <div className={Style.Cover}>\r\n                        <button \r\n                            onClick={toLoginPage}\r\n                            type=\"button\"\r\n                            className={Style.cancelBtn}\r\n                            value=\"0\">\r\n                            취 소\r\n                        </button>\r\n                    </div>\r\n                    <div className={Style.Cover}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={Style.submitBtn}>\r\n                            가 입\r\n                        </button>\r\n                    </div>\r\n                    <div />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\passwordSetting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\blockSetting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\profileSetting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\noticeSetting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\leftInner\\setting\\filteringSetting.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\gradp\\src\\routes\\Home\\root\\profile.js",[],[],{"ruleId":"176","severity":1,"message":"177","line":6,"column":3,"nodeType":"178","messageId":"179","endLine":6,"endColumn":11},{"ruleId":"176","severity":1,"message":"180","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"181","line":131,"column":9,"nodeType":"178","messageId":"179","endLine":131,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":156,"column":17,"nodeType":"184","endLine":156,"endColumn":103},{"ruleId":"182","severity":1,"message":"183","line":163,"column":17,"nodeType":"184","endLine":163,"endColumn":105},{"ruleId":"182","severity":1,"message":"183","line":170,"column":17,"nodeType":"184","endLine":170,"endColumn":112},{"ruleId":"182","severity":1,"message":"183","line":177,"column":17,"nodeType":"184","endLine":177,"endColumn":104},{"ruleId":"182","severity":1,"message":"183","line":184,"column":17,"nodeType":"184","endLine":184,"endColumn":108},{"ruleId":"182","severity":1,"message":"183","line":12,"column":13,"nodeType":"184","endLine":12,"endColumn":77},{"ruleId":"182","severity":1,"message":"183","line":12,"column":13,"nodeType":"184","endLine":12,"endColumn":77},{"ruleId":"176","severity":1,"message":"185","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":36,"column":17,"nodeType":"178","messageId":"188","endLine":36,"endColumn":25},{"ruleId":"186","severity":1,"message":"189","line":37,"column":17,"nodeType":"178","messageId":"188","endLine":37,"endColumn":31},{"ruleId":"182","severity":1,"message":"183","line":35,"column":21,"nodeType":"184","endLine":35,"endColumn":119},{"ruleId":"190","severity":1,"message":"191","line":61,"column":29,"nodeType":"192","messageId":"193","endLine":61,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":70,"column":43,"nodeType":"192","messageId":"193","endLine":70,"endColumn":45},{"ruleId":"182","severity":1,"message":"183","line":175,"column":21,"nodeType":"184","endLine":175,"endColumn":100},{"ruleId":"194","severity":1,"message":"195","line":74,"column":30,"nodeType":"196","endLine":74,"endColumn":32,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"183","line":134,"column":33,"nodeType":"184","endLine":134,"endColumn":96},{"ruleId":"182","severity":1,"message":"183","line":142,"column":33,"nodeType":"184","endLine":142,"endColumn":96},{"ruleId":"194","severity":1,"message":"198","line":85,"column":34,"nodeType":"196","endLine":85,"endColumn":49,"suggestions":"199"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NumberNotice' is defined but never used.","'leftChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","no-const-assign","'pageList' is constant.","const","'currentStartId' is constant.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newPostCommentNotice', 'newPostLikeNotice', 'newPostReadCommentAuth', 'newPostReadLikeAuth', 'newPostReadPostAuth', and 'newPostWriteCommentAuth'. Either include them or remove the dependency array.","ArrayExpression",["200"],"React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.",["201"],{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [newPostCommentNotice, newPostLikeNotice, newPostReadCommentAuth, newPostReadLikeAuth, newPostReadPostAuth, newPostWriteCommentAuth]",{"range":"206","text":"207"},"Update the dependencies array to be: [password, passwordCheck]",{"range":"208","text":"209"},[3667,3669],"[newPostCommentNotice, newPostLikeNotice, newPostReadCommentAuth, newPostReadLikeAuth, newPostReadPostAuth, newPostWriteCommentAuth]",[2848,2863],"[password, passwordCheck]"]