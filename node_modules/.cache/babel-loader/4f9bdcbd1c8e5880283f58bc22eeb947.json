{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luckh\\\\OneDrive\\\\Desktop\\\\gradp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from \"./routes/Home/root/HomeMain\";\nimport Login from \"./routes/Login/root/LoginMain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kakaotokenUrl = 'http://52.78.49.137:8080/social/login/kakao';\nconst navertokenUrl = 'http://52.78.49.137:8080/social/login/naver';\nconst homepageUrl = 'localhost:3000';\n\nfunction App() {\n  _s();\n\n  const [loginState, setLoginState] = useState(false); //로그인 시 페이지 전환하는 함수\n\n  const loginFunc = () => {\n    setLoginState(true);\n  }; //로그아웃 시 페이지 전환하는 함수\n\n\n  const logoutFunc = () => {\n    setLoginState(false);\n  };\n\n  const socialLogin = () => {\n    if (!loginState) {\n      let url = new URL(window.location.href);\n\n      if (url === homepageUrl + '/main') {\n        alert(homepageUrl + '/main');\n        window.location.href = \"/\";\n      }\n\n      const userCode = url.searchParams.get('code');\n\n      if (userCode !== null) {\n        axios.post(kakaotokenUrl, {\n          code: userCode\n        }).then(res => {\n          console.log(res);\n          loginFunc();\n          window.location.href = \"/main\";\n        }).catch(res => {\n          console.log(res);\n          window.location.href = \"/\";\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [!loginState ? socialLogin() : null, /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          logout: logoutFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          login: loginFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} //로그인 화면에서는 로그인만 해주면 되고, Home에서는 현재의 login상태를 확인하고, login안되어있으면 login화면으로 보내줘야한다.\n\n\n_s(App, \"BAviT0oH7KWwMMs9fI0JTZI7AEY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","BrowserRouter","Router","Route","Switch","Redirect","Home","Login","kakaotokenUrl","navertokenUrl","homepageUrl","App","loginState","setLoginState","loginFunc","logoutFunc","socialLogin","url","URL","window","location","href","alert","userCode","searchParams","get","post","code","then","res","console","log","catch"],"sources":["C:/Users/luckh/OneDrive/Desktop/gradp/src/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport Home from \"./routes/Home/root/HomeMain\";\r\nimport Login from \"./routes/Login/root/LoginMain\";\r\n\r\nconst kakaotokenUrl = 'http://52.78.49.137:8080/social/login/kakao';\r\nconst navertokenUrl = 'http://52.78.49.137:8080/social/login/naver';\r\nconst homepageUrl = 'localhost:3000';\r\n\r\nfunction App() {\r\n  const [loginState, setLoginState] = useState(false);\r\n\r\n  //로그인 시 페이지 전환하는 함수\r\n  const loginFunc = () => {\r\n    setLoginState(true);\r\n  };\r\n  //로그아웃 시 페이지 전환하는 함수\r\n  const logoutFunc = () => {\r\n    setLoginState(false);\r\n  };\r\n\r\n  const socialLogin = () => {\r\n    if(!loginState){\r\n      let url = new URL(window.location.href);\r\n      if(url === homepageUrl + '/main'){\r\n        alert(homepageUrl + '/main');\r\n        window.location.href=\"/\";\r\n      }\r\n      const userCode = url.searchParams.get('code');\r\n      if(userCode !== null){\r\n        axios.post(kakaotokenUrl, {\r\n          code: userCode,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          loginFunc();\r\n          window.location.href=\"/main\";\r\n        })\r\n        .catch((res) => {\r\n          console.log(res);\r\n          window.location.href=\"/\";\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      {!loginState ? socialLogin() : null}\r\n      <Switch>\r\n        <Route path=\"/main\">\r\n          <Home logout={logoutFunc} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Login login={loginFunc} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n//로그인 화면에서는 로그인만 해주면 되고, Home에서는 현재의 login상태를 확인하고, login안되어있으면 login화면으로 보내줘야한다.\r\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAOA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEA,MAAMC,aAAa,GAAG,6CAAtB;AACA,MAAMC,aAAa,GAAG,6CAAtB;AACA,MAAMC,WAAW,GAAG,gBAApB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C,CADa,CAGb;;EACA,MAAMc,SAAS,GAAG,MAAM;IACtBD,aAAa,CAAC,IAAD,CAAb;EACD,CAFD,CAJa,CAOb;;;EACA,MAAME,UAAU,GAAG,MAAM;IACvBF,aAAa,CAAC,KAAD,CAAb;EACD,CAFD;;EAIA,MAAMG,WAAW,GAAG,MAAM;IACxB,IAAG,CAACJ,UAAJ,EAAe;MACb,IAAIK,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAV;;MACA,IAAGJ,GAAG,KAAKP,WAAW,GAAG,OAAzB,EAAiC;QAC/BY,KAAK,CAACZ,WAAW,GAAG,OAAf,CAAL;QACAS,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;MACD;;MACD,MAAME,QAAQ,GAAGN,GAAG,CAACO,YAAJ,CAAiBC,GAAjB,CAAqB,MAArB,CAAjB;;MACA,IAAGF,QAAQ,KAAK,IAAhB,EAAqB;QACnBxB,KAAK,CAAC2B,IAAN,CAAWlB,aAAX,EAA0B;UACxBmB,IAAI,EAAEJ;QADkB,CAA1B,EAGCK,IAHD,CAGOC,GAAD,IAAS;UACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;UACAf,SAAS;UACTK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,OAArB;QACD,CAPD,EAQCW,KARD,CAQQH,GAAD,IAAS;UACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;UACAV,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;QACD,CAXD;MAYD;IACF;EACF,CAvBD;;EAyBA,oBACE,QAAC,MAAD;IAAA,WACG,CAACT,UAAD,GAAcI,WAAW,EAAzB,GAA8B,IADjC,eAEE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAA,uBACE,QAAC,IAAD;UAAM,MAAM,EAAED;QAAd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAA,uBACE,QAAC,KAAD;UAAO,KAAK,EAAED;QAAd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,C,CACD;;;GAnDSH,G;;KAAAA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}