{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/frontend/src/routes/Home/leftInner/page/page.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useInView } from \"react-intersection-observer\";\nimport axios from 'axios';\nimport Style from './page.module.css';\nimport { pageloadUrl } from \"../../../../apiUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageList = [1, 2, 3, 4, 5];\nconst currentStartId = 987654321;\n\nconst Pages = _ref => {\n  let {\n    obj,\n    lastRef\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.singlePageCover,\n    children: obj.map((data, index) => index === obj.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: lastRef,\n      children: \"last obj\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pages;\n\nconst LeftPage = () => {\n  _s();\n\n  const [ref, inView] = useInView(); //ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다.\n\n  const pageLoadFunc = () => {\n    if (inView) {\n      axios.get(pageloadUrl + \"?startId=\" + currentStartId).then(res => {\n        console.log(\"데이터 추가\");\n        pageList = [...res.data]; //추가 데이터 저장\n\n        currentStartId = res.startId;\n      }).catch(res => {\n        console.log(\"error\");\n        console.log(res);\n      });\n    }\n  };\n\n  useEffect(pageLoadFunc, [inView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.pageCover,\n    children: /*#__PURE__*/_jsxDEV(Pages, {\n      obj: pageList,\n      lastRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeftPage, \"NM+FbdzloGTSb9OQYptCldRblZA=\", false, function () {\n  return [useInView];\n});\n\n_c2 = LeftPage;\nexport default LeftPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pages\");\n$RefreshReg$(_c2, \"LeftPage\");","map":{"version":3,"names":["useState","useEffect","useInView","axios","Style","pageloadUrl","pageList","currentStartId","Pages","obj","lastRef","singlePageCover","map","data","index","length","LeftPage","ref","inView","pageLoadFunc","get","then","res","console","log","startId","catch","pageCover"],"sources":["/home/ubuntu/frontend/src/routes/Home/leftInner/page/page.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useInView } from \"react-intersection-observer\";\nimport axios from 'axios';\nimport Style from './page.module.css';\nimport {\n    pageloadUrl,\n} from \"../../../../apiUrl\";\n\nconst pageList = [1,2,3,4,5];\nconst currentStartId = 987654321;\n\nconst Pages = ({ obj, lastRef }) => {\n    return(\n        <div className={Style.singlePageCover}>\n            {\n                obj.map((data, index) => (\n                    index === (obj.length - 1) ? \n                    <p key={index} ref={lastRef}>last obj</p>\n                    :\n                    <p key={index}>{data}</p>\n                ))\n            }\n        </div>\n    );\n}\n\n\nconst LeftPage = () => {\n    const [ref, inView] = useInView();//ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다.\n\n    const pageLoadFunc = () => {\n        if(inView){\n            axios.get(pageloadUrl + \"?startId=\" + currentStartId)\n            .then((res) => {\n                console.log(\"데이터 추가\");\n                pageList = [...res.data];//추가 데이터 저장\n                currentStartId = res.startId;\n            })\n            .catch((res) => {\n                console.log(\"error\");\n                console.log(res);\n            })\n        }\n    };\n    useEffect(pageLoadFunc, [inView]);\n    return(\n        <div className={Style.pageCover}>\n            <Pages obj={pageList} lastRef={ref}/>\n        </div>\n    );\n}\n\nexport default LeftPage;\n\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SACIC,WADJ,QAEO,oBAFP;;AAIA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAjB;AACA,MAAMC,cAAc,GAAG,SAAvB;;AAEA,MAAMC,KAAK,GAAG,QAAsB;EAAA,IAArB;IAAEC,GAAF;IAAOC;EAAP,CAAqB;EAChC,oBACI;IAAK,SAAS,EAAEN,KAAK,CAACO,eAAtB;IAAA,UAEQF,GAAG,CAACG,GAAJ,CAAQ,CAACC,IAAD,EAAOC,KAAP,KACJA,KAAK,KAAML,GAAG,CAACM,MAAJ,GAAa,CAAxB,gBACA;MAAe,GAAG,EAAEL,OAApB;MAAA;IAAA,GAAQI,KAAR;MAAA;MAAA;MAAA;IAAA,QADA,gBAGA;MAAA,UAAgBD;IAAhB,GAAQC,KAAR;MAAA;MAAA;MAAA;IAAA,QAJJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAbD;;KAAMN,K;;AAgBN,MAAMQ,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,SAAS,EAA/B,CADmB,CACe;;EAElC,MAAMiB,YAAY,GAAG,MAAM;IACvB,IAAGD,MAAH,EAAU;MACNf,KAAK,CAACiB,GAAN,CAAUf,WAAW,GAAG,WAAd,GAA4BE,cAAtC,EACCc,IADD,CACOC,GAAD,IAAS;QACXC,OAAO,CAACC,GAAR,CAAY,QAAZ;QACAlB,QAAQ,GAAG,CAAC,GAAGgB,GAAG,CAACT,IAAR,CAAX,CAFW,CAEc;;QACzBN,cAAc,GAAGe,GAAG,CAACG,OAArB;MACH,CALD,EAMCC,KAND,CAMQJ,GAAD,IAAS;QACZC,OAAO,CAACC,GAAR,CAAY,OAAZ;QACAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CATD;IAUH;EACJ,CAbD;;EAcArB,SAAS,CAACkB,YAAD,EAAe,CAACD,MAAD,CAAf,CAAT;EACA,oBACI;IAAK,SAAS,EAAEd,KAAK,CAACuB,SAAtB;IAAA,uBACI,QAAC,KAAD;MAAO,GAAG,EAAErB,QAAZ;MAAsB,OAAO,EAAEW;IAA/B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAvBD;;GAAMD,Q;UACoBd,S;;;MADpBc,Q;AAyBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}