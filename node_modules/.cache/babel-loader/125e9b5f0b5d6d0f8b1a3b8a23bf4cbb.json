{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luckh\\\\OneDrive\\\\Desktop\\\\gradp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from \"./routes/Home/root/HomeMain\";\nimport Login from \"./routes/Login/root/LoginMain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  _s();\n\n  const [loginState, SetLoginState] = useState(false); //로그인함수\n\n  const loginFunc = res => {\n    //const { accessToken } = res.data;\n    //axios.defaults.headers.common['Authorization'] = `${accessToken}`;\n    const {\n      refreshToken\n    } = res.headers.authorization;\n    console.log(res.res.headers.authorization);\n    axios.defaults.headers.common['Authorization'] = `${refreshToken}`;\n    axios.get('http://52.78.49.137:8080/user/auth/refresh').then(res => console.log(\"OK\")).catch(res => {\n      console.log(\"NO\");\n      console.log(res);\n    });\n  }; //로그아웃 함수\n\n\n  const logoutFunc = () => {}; //소셜 로그인 처리 함수\n\n\n  const socialLogin = userCode => {\n    axios.post(kakaotokenUrl, {\n      code: userCode\n    }).then(res => {\n      console.log(res);\n      loginFunc();\n    }).catch(res => {\n      console.log(res);\n      loginFunc(); //지워야함\n    });\n  };\n\n  const LoginCheck = () => {\n    console.log(loginState);\n\n    if (loginState) {//window.location.href = \"/main\"\n    } else {\n      let url = new URL(window.location.href);\n      const userCode = url.searchParams.get('code');\n\n      if (userCode !== null) {\n        socialLogin(userCode);\n      } else {\n        window.location.href = \"/\";\n      }\n    }\n  };\n\n  useEffect(LoginCheck, [loginState]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          logout: logoutFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          login: loginFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ozpahJdBKYVTicQFjYJ5uOsGWgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","BrowserRouter","Router","Route","Switch","Redirect","Home","Login","defaults","withCredentials","App","loginState","SetLoginState","loginFunc","res","refreshToken","headers","authorization","console","log","common","get","then","catch","logoutFunc","socialLogin","userCode","post","kakaotokenUrl","code","LoginCheck","url","URL","window","location","href","searchParams","useEffect"],"sources":["C:/Users/luckh/OneDrive/Desktop/gradp/src/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport Home from \"./routes/Home/root/HomeMain\";\r\nimport Login from \"./routes/Login/root/LoginMain\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction App() {\r\n  const [loginState, SetLoginState] = useState(false)\r\n\r\n  //로그인함수\r\n  const loginFunc = (res) => {\r\n    //const { accessToken } = res.data;\r\n    //axios.defaults.headers.common['Authorization'] = `${accessToken}`;\r\n\r\n    const { refreshToken } = res.headers.authorization;\r\n    console.log(res.res.headers.authorization)\r\n    axios.defaults.headers.common['Authorization'] = `${refreshToken}`;\r\n\r\n    axios.get('http://52.78.49.137:8080/user/auth/refresh',)\r\n    .then((res) => console.log(\"OK\"))\r\n    .catch((res) =>{\r\n      console.log(\"NO\");\r\n      console.log(res);\r\n    })\r\n  };\r\n\r\n  //로그아웃 함수\r\n  const logoutFunc = () => {\r\n\r\n  };\r\n\r\n  //소셜 로그인 처리 함수\r\n  const socialLogin = (userCode) => {\r\n    axios.post(kakaotokenUrl, {\r\n      code: userCode,\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      loginFunc();\r\n    })\r\n    .catch((res) => {\r\n      console.log(res);\r\n      loginFunc();//지워야함\r\n    });\r\n  };\r\n\r\n  const LoginCheck = () => {\r\n    console.log(loginState);\r\n    if(loginState){\r\n        //window.location.href = \"/main\"\r\n    }\r\n    else{\r\n      let url = new URL(window.location.href);\r\n      const userCode = url.searchParams.get('code');\r\n      if(userCode !== null){\r\n        socialLogin(userCode);\r\n      }\r\n      else{\r\n        window.location.href=\"/\";\r\n      }\r\n    }\r\n  };\r\n  useEffect(LoginCheck, [loginState]);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/main\">\r\n          <Home logout={logoutFunc} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Login login={loginFunc} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEAR,KAAK,CAACS,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C,CADa,CAGb;;EACA,MAAMa,SAAS,GAAIC,GAAD,IAAS;IACzB;IACA;IAEA,MAAM;MAAEC;IAAF,IAAmBD,GAAG,CAACE,OAAJ,CAAYC,aAArC;IACAC,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACA,GAAJ,CAAQE,OAAR,CAAgBC,aAA5B;IACAlB,KAAK,CAACS,QAAN,CAAeQ,OAAf,CAAuBI,MAAvB,CAA8B,eAA9B,IAAkD,GAAEL,YAAa,EAAjE;IAEAhB,KAAK,CAACsB,GAAN,CAAU,4CAAV,EACCC,IADD,CACOR,GAAD,IAASI,OAAO,CAACC,GAAR,CAAY,IAAZ,CADf,EAECI,KAFD,CAEQT,GAAD,IAAQ;MACbI,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAD,OAAO,CAACC,GAAR,CAAYL,GAAZ;IACD,CALD;EAMD,CAdD,CAJa,CAoBb;;;EACA,MAAMU,UAAU,GAAG,MAAM,CAExB,CAFD,CArBa,CAyBb;;;EACA,MAAMC,WAAW,GAAIC,QAAD,IAAc;IAChC3B,KAAK,CAAC4B,IAAN,CAAWC,aAAX,EAA0B;MACxBC,IAAI,EAAEH;IADkB,CAA1B,EAGCJ,IAHD,CAGOR,GAAD,IAAS;MACbI,OAAO,CAACC,GAAR,CAAYL,GAAZ;MACAD,SAAS;IACV,CAND,EAOCU,KAPD,CAOQT,GAAD,IAAS;MACdI,OAAO,CAACC,GAAR,CAAYL,GAAZ;MACAD,SAAS,GAFK,CAEF;IACb,CAVD;EAWD,CAZD;;EAcA,MAAMiB,UAAU,GAAG,MAAM;IACvBZ,OAAO,CAACC,GAAR,CAAYR,UAAZ;;IACA,IAAGA,UAAH,EAAc,CACV;IACH,CAFD,MAGI;MACF,IAAIoB,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAV;MACA,MAAMT,QAAQ,GAAGK,GAAG,CAACK,YAAJ,CAAiBf,GAAjB,CAAqB,MAArB,CAAjB;;MACA,IAAGK,QAAQ,KAAK,IAAhB,EAAqB;QACnBD,WAAW,CAACC,QAAD,CAAX;MACD,CAFD,MAGI;QACFO,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;MACD;IACF;EACF,CAfD;;EAgBAE,SAAS,CAACP,UAAD,EAAa,CAACnB,UAAD,CAAb,CAAT;EAEA,oBACE,QAAC,MAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAA,uBACE,QAAC,IAAD;UAAM,MAAM,EAAEa;QAAd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAA,uBACE,QAAC,KAAD;UAAO,KAAK,EAAEX;QAAd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAtEQH,G;;KAAAA,G;AAyET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}