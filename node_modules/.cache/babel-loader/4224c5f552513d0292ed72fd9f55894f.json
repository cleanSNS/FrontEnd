{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luckh\\\\OneDrive\\\\Desktop\\\\gradp\\\\src\\\\routes\\\\Home\\\\leftInner\\\\page\\\\page.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useInView } from \"react-intersection-observer\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageloadUrl = 'http://52.78.49.137:8080/page/main';\n\nconst SinglePage = _ref => {\n  _s();\n\n  let {\n    obj\n  } = _ref;\n  const [ref, inView] = useInView(); //ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 flase이다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePage, \"GpcLnEGLCRT/LcXgsVwPMCbjDPg=\", false, function () {\n  return [useInView];\n});\n\n_c = SinglePage;\n\nconst LeftPage = () => {\n  _s2();\n\n  const pageLoadFunc = () => {\n    if (inView) {\n      axios.get(pageloadUrl + \"?startId=\" + 0).then(res => {\n        console.log(res);\n      }).catch(res => {\n        console.log(\"error\");\n        console.log(res);\n      });\n    }\n  };\n\n  useEffect(pageLoadFunc, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(LeftPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = LeftPage;\nexport default LeftPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SinglePage\");\n$RefreshReg$(_c2, \"LeftPage\");","map":{"version":3,"names":["useState","useEffect","useInView","axios","pageloadUrl","SinglePage","obj","ref","inView","LeftPage","pageLoadFunc","get","then","res","console","log","catch"],"sources":["C:/Users/luckh/OneDrive/Desktop/gradp/src/routes/Home/leftInner/page/page.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport axios from 'axios';\r\n\r\nconst pageloadUrl = 'http://52.78.49.137:8080/page/main';\r\n\r\nconst SinglePage = ({ obj }) => {\r\n    const [ref, inView] = useInView();//ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 flase이다.\r\n    return(\r\n        <div>hi</div>\r\n    );\r\n}\r\n\r\n\r\nconst LeftPage = () => { \r\n\r\n    const pageLoadFunc = () => {\r\n        if(inView){\r\n            axios.get(pageloadUrl + \"?startId=\" + 0)\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((res) => {\r\n                console.log(\"error\");\r\n                console.log(res);\r\n            })\r\n        }\r\n    };\r\n    useEffect(pageLoadFunc, []);\r\n    return(\r\n        <p>hi</p>\r\n    );\r\n}\r\n\r\nexport default LeftPage;"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,oCAApB;;AAEA,MAAMC,UAAU,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC5B,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,SAAS,EAA/B,CAD4B,CACM;;EAClC,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CALD;;GAAMG,U;UACoBH,S;;;KADpBG,U;;AAQN,MAAMI,QAAQ,GAAG,MAAM;EAAA;;EAEnB,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAGF,MAAH,EAAU;MACNL,KAAK,CAACQ,GAAN,CAAUP,WAAW,GAAG,WAAd,GAA4B,CAAtC,EACCQ,IADD,CACOC,GAAD,IAAS;QACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CAHD,EAICG,KAJD,CAIQH,GAAD,IAAS;QACZC,OAAO,CAACC,GAAR,CAAY,OAAZ;QACAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CAPD;IAQH;EACJ,CAXD;;EAYAZ,SAAS,CAACS,YAAD,EAAe,EAAf,CAAT;EACA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAlBD;;IAAMD,Q;;MAAAA,Q;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}