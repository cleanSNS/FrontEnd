{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luckh\\\\OneDrive\\\\Desktop\\\\gradp\\\\src\\\\routes\\\\Home\\\\leftInner\\\\page\\\\page.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useInView } from \"react-intersection-observer\";\nimport axios from 'axios';\nimport Style from './page.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageloadUrl = 'http://52.78.49.137:8080/page/main';\nconst pageList = [1, 2, 3, 4, 5];\nconst currentStartId = 987654321;\n\nconst SinglePage = (obj, lastRef) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.singlePageCover,\n    children: lastRef === null ? //마지막 요소인 경우\n    null : //마지막 요소가 아닌 경우\n    null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SinglePage;\n\nconst Pages = _ref => {\n  let {\n    obj,\n    lastRef\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.map((data, index) => index === obj.length - 1 ? /*#__PURE__*/_jsxDEV(SinglePage, {\n      ref: lastRef\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(SinglePage, {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Pages;\n\nconst LeftPage = () => {\n  _s();\n\n  const [ref, inView] = useInView(); //ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다. \n\n  const pageLoadFunc = () => {\n    if (inView) {\n      axios.get(pageloadUrl + \"?startId=\" + currentStartId).then(res => {\n        console.log(res);\n      }).catch(res => {\n        console.log(\"error\");\n        console.log(res);\n      });\n    }\n  };\n\n  useEffect(pageLoadFunc, [inView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.pageCover,\n    children: /*#__PURE__*/_jsxDEV(Pages, {\n      obj: pageList,\n      lastRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeftPage, \"NM+FbdzloGTSb9OQYptCldRblZA=\", false, function () {\n  return [useInView];\n});\n\n_c3 = LeftPage;\nexport default LeftPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SinglePage\");\n$RefreshReg$(_c2, \"Pages\");\n$RefreshReg$(_c3, \"LeftPage\");","map":{"version":3,"names":["useState","useEffect","useInView","axios","Style","pageloadUrl","pageList","currentStartId","SinglePage","obj","lastRef","singlePageCover","Pages","map","data","index","length","LeftPage","ref","inView","pageLoadFunc","get","then","res","console","log","catch","pageCover"],"sources":["C:/Users/luckh/OneDrive/Desktop/gradp/src/routes/Home/leftInner/page/page.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport axios from 'axios';\r\nimport Style from './page.module.css';\r\n\r\nconst pageloadUrl = 'http://52.78.49.137:8080/page/main';\r\n\r\nconst pageList = [1,2,3,4,5];\r\nconst currentStartId = 987654321;\r\n\r\nconst SinglePage = (obj, lastRef) => {\r\n    return(\r\n        <div className={Style.singlePageCover}>\r\n        {\r\n            lastRef === null ?\r\n            //마지막 요소인 경우\r\n            null\r\n            :\r\n            //마지막 요소가 아닌 경우\r\n            null\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Pages = ({ obj, lastRef }) => {\r\n    return(\r\n        <div>\r\n            {\r\n                obj.map((data, index) => (\r\n                    index === (obj.length - 1) ? \r\n                    <SinglePage key={index} ref={lastRef} />\r\n                    :\r\n                    <SinglePage key={index} />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst LeftPage = () => {\r\n    const [ref, inView] = useInView();//ref를 {ref}로 설정한요소가 화면에 보이는 상황이면 true가 나오고, 아닌 경우 false이다. \r\n\r\n\r\n    const pageLoadFunc = () => {\r\n        if(inView){\r\n            axios.get(pageloadUrl + \"?startId=\" + currentStartId)\r\n            .then((res) => {\r\n                console.log(res);\r\n            })\r\n            .catch((res) => {\r\n                console.log(\"error\");\r\n                console.log(res);\r\n            })\r\n        }\r\n    };\r\n    useEffect(pageLoadFunc, [inView]);\r\n    return(\r\n        <div className={Style.pageCover}>\r\n            <Pages obj={pageList} lastRef={ref}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftPage;\r\n\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,WAAW,GAAG,oCAApB;AAEA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAjB;AACA,MAAMC,cAAc,GAAG,SAAvB;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;EACjC,oBACI;IAAK,SAAS,EAAEN,KAAK,CAACO,eAAtB;IAAA,UAEID,OAAO,KAAK,IAAZ,GACA;IACA,IAFA,GAIA;IACA;EAPJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAbD;;KAAMF,U;;AAeN,MAAMI,KAAK,GAAG,QAAsB;EAAA,IAArB;IAAEH,GAAF;IAAOC;EAAP,CAAqB;EAChC,oBACI;IAAA,UAEQD,GAAG,CAACI,GAAJ,CAAQ,CAACC,IAAD,EAAOC,KAAP,KACJA,KAAK,KAAMN,GAAG,CAACO,MAAJ,GAAa,CAAxB,gBACA,QAAC,UAAD;MAAwB,GAAG,EAAEN;IAA7B,GAAiBK,KAAjB;MAAA;MAAA;MAAA;IAAA,QADA,gBAGA,QAAC,UAAD,MAAiBA,KAAjB;MAAA;MAAA;MAAA;IAAA,QAJJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAbD;;MAAMH,K;;AAgBN,MAAMK,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,SAAS,EAA/B,CADmB,CACe;;EAGlC,MAAMkB,YAAY,GAAG,MAAM;IACvB,IAAGD,MAAH,EAAU;MACNhB,KAAK,CAACkB,GAAN,CAAUhB,WAAW,GAAG,WAAd,GAA4BE,cAAtC,EACCe,IADD,CACOC,GAAD,IAAS;QACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CAHD,EAICG,KAJD,CAIQH,GAAD,IAAS;QACZC,OAAO,CAACC,GAAR,CAAY,OAAZ;QACAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CAPD;IAQH;EACJ,CAXD;;EAYAtB,SAAS,CAACmB,YAAD,EAAe,CAACD,MAAD,CAAf,CAAT;EACA,oBACI;IAAK,SAAS,EAAEf,KAAK,CAACuB,SAAtB;IAAA,uBACI,QAAC,KAAD;MAAO,GAAG,EAAErB,QAAZ;MAAsB,OAAO,EAAEY;IAA/B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAtBD;;GAAMD,Q;UACoBf,S;;;MADpBe,Q;AAwBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}