{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/frontend/src/routes/Home/rightInner/setting/setting.js\";\nimport Style from './setting.module.css'; //settingState로 가능한 것들 profile // Snotice // password // filtering // block 반드시 핸들러로 값 변경\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Setting = _ref => {\n  let {\n    settingState,\n    SettingChangeHandler\n  } = _ref;\n\n  const settingClickHandler = event => {\n    if (event.target.id === settingState) return;\n    document.querySelector(\"#\" + event.target.id).style.backgroundColor = \"rgb(230, 230, 230)\";\n\n    if (settingState !== \"initial\") {\n      document.querySelector(\"#\" + settingState).style.backgroundColor = \"white\";\n    }\n\n    SettingChangeHandler(event.target.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.settingList,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.firstSettingCover,\n      id: \"profile\",\n      onClick: settingClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.setting,\n        id: \"profile\",\n        onClick: settingClickHandler,\n        children: \"\\uD504\\uB85C\\uD544 \\uD3B8\\uC9D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.settingCover,\n      id: \"Snotice\",\n      onClick: settingClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.setting,\n        id: \"Snotice\",\n        onClick: settingClickHandler,\n        children: \"\\uD478\\uC26C \\uC54C\\uB9BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.settingCover,\n      id: \"password\",\n      onClick: settingClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.setting,\n        id: \"password\",\n        onClick: settingClickHandler,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.settingCover,\n      id: \"filtering\",\n      onClick: settingClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.setting,\n        id: \"filtering\",\n        onClick: settingClickHandler,\n        children: \"\\uD544\\uD130\\uB9C1 \\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.lastSettingCover,\n      id: \"block\",\n      onClick: settingClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Style.setting,\n        id: \"block\",\n        onClick: settingClickHandler,\n        children: \"\\uCC28\\uB2E8 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Setting;\n\nconst RightSetting = _ref2 => {\n  let {\n    settingState,\n    SettingChangeHandler,\n    logout\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.wholeCover,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.settingListCover,\n      children: /*#__PURE__*/_jsxDEV(Setting, {\n        settingState: settingState,\n        SettingChangeHandler: SettingChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.btnCover,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: Style.logoutbtn,\n        onClick: logout,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = RightSetting;\nexport default RightSetting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Setting\");\n$RefreshReg$(_c2, \"RightSetting\");","map":{"version":3,"names":["Style","Setting","settingState","SettingChangeHandler","settingClickHandler","event","target","id","document","querySelector","style","backgroundColor","settingList","firstSettingCover","setting","settingCover","lastSettingCover","RightSetting","logout","wholeCover","settingListCover","btnCover","logoutbtn"],"sources":["/home/ubuntu/frontend/src/routes/Home/rightInner/setting/setting.js"],"sourcesContent":["import Style from './setting.module.css';\n\n//settingState로 가능한 것들 profile // Snotice // password // filtering // block 반드시 핸들러로 값 변경\nconst Setting = ({settingState, SettingChangeHandler}) => {\n    const settingClickHandler = (event) => {\n        if(event.target.id === settingState) return;\n        document.querySelector(\"#\" + event.target.id).style.backgroundColor = \"rgb(230, 230, 230)\";\n        if(settingState !== \"initial\"){\n            document.querySelector(\"#\" + settingState).style.backgroundColor = \"white\";\n        }\n        SettingChangeHandler(event.target.id);\n    };\n    return(\n        <div className={Style.settingList}>\n            <div className={Style.firstSettingCover} id=\"profile\" onClick={settingClickHandler}>\n                <div className={Style.setting} id=\"profile\" onClick={settingClickHandler}>프로필 편집</div>\n            </div>\n            <div className={Style.settingCover} id=\"Snotice\" onClick={settingClickHandler}>\n                <p className={Style.setting} id=\"Snotice\" onClick={settingClickHandler}>푸쉬 알림</p>\n            </div>\n            <div className={Style.settingCover} id=\"password\" onClick={settingClickHandler}>\n                <p className={Style.setting} id=\"password\" onClick={settingClickHandler}>비밀번호 변경</p>\n            </div>\n            <div className={Style.settingCover} id=\"filtering\" onClick={settingClickHandler}>\n                <p className={Style.setting} id=\"filtering\" onClick={settingClickHandler}>필터링 설정</p>\n            </div>\n            <div className={Style.lastSettingCover} id=\"block\" onClick={settingClickHandler}>\n                <p className={Style.setting} id=\"block\" onClick={settingClickHandler}>차단 목록</p>\n            </div>\n        </div>\n    );\n}\n\nconst RightSetting = ({settingState, SettingChangeHandler, logout}) => {\n    return(\n        <div className={Style.wholeCover}>\n            <div className={Style.settingListCover}>\n                <Setting settingState={settingState} SettingChangeHandler={SettingChangeHandler} />\n            </div>\n            <div className={Style.btnCover}>\n                <button className={Style.logoutbtn} onClick={logout}>로그아웃</button>\n            </div>\n        </div>\n    );\n}\n\nexport default RightSetting"],"mappings":"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"},"metadata":{},"sourceType":"module"}