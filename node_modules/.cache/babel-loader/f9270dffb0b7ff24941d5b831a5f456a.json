{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luckh\\\\OneDrive\\\\Desktop\\\\gradp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [ref, inView] = useInView(); // 서버에서 아이템을 가지고 오는 함수\n\n  const getItems = useCallback(async () => {\n    setLoading(true);\n    await axios.get('http://52.78.49.137:8080/page/main').then(res => {\n      setItems(prevState => [...prevState, res]);\n    });\n    setLoading(false);\n  }, [page]); // `getItems` 가 바뀔 때 마다 함수 실행\n\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n  useEffect(() => {\n    // 사용자가 마지막 요소를 보고 있고, 로딩 중이 아니라면\n    if (inView && !loading) {\n      setPage(prevState => prevState + 1);\n    }\n  }, [inView, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: items.length - 1 == idx ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item\",\n        ref: ref,\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item\",\n        children: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Fb22o1Y7H7CdTQl6sP533p6BKLA=\", false, function () {\n  return [useInView];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useInView","axios","App","items","setItems","page","setPage","loading","setLoading","ref","inView","getItems","get","then","res","prevState","map","item","idx","length","content"],"sources":["C:/Users/luckh/OneDrive/Desktop/gradp/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect, useCallback } from \"react\"\r\nimport { useInView } from \"react-intersection-observer\"\r\nimport axios from \"axios\"\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [ref, inView] = useInView()\r\n\r\n  // 서버에서 아이템을 가지고 오는 함수\r\n  const getItems = useCallback(async () => {\r\n    setLoading(true)\r\n    await axios.get('http://52.78.49.137:8080/page/main').then((res) => {\r\n      setItems(prevState => [...prevState, res])\r\n    })\r\n    setLoading(false)\r\n  }, [page])\r\n\r\n  // `getItems` 가 바뀔 때 마다 함수 실행\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [getItems])\r\n\r\n  useEffect(() => {\r\n    // 사용자가 마지막 요소를 보고 있고, 로딩 중이 아니라면\r\n    if (inView && !loading) {\r\n      setPage(prevState => prevState + 1)\r\n    }\r\n  }, [inView, loading])\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {items.map((item, idx) => (\r\n        <React.Fragment key={idx}>\r\n          {items.length - 1 == idx ? (\r\n            <div className=\"list-item\" ref={ref}>\r\n              {item.content}\r\n            </div>\r\n          ) : (\r\n            <div className=\"list-item\">\r\n              {item.content}\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      )\r\n    )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBV,SAAS,EAA/B,CALgB,CAOhB;;EACA,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,YAAY;IACvCS,UAAU,CAAC,IAAD,CAAV;IACA,MAAMP,KAAK,CAACW,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAsDC,GAAD,IAAS;MAClEV,QAAQ,CAACW,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeD,GAAf,CAAd,CAAR;IACD,CAFK,CAAN;IAGAN,UAAU,CAAC,KAAD,CAAV;EACD,CAN2B,EAMzB,CAACH,IAAD,CANyB,CAA5B,CARgB,CAgBhB;;EACAP,SAAS,CAAC,MAAM;IACda,QAAQ;EACT,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIAb,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,MAAM,IAAI,CAACH,OAAf,EAAwB;MACtBD,OAAO,CAACS,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAP;IACD;EACF,CALQ,EAKN,CAACL,MAAD,EAASH,OAAT,CALM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,UACGJ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBACT,QAAC,KAAD,CAAO,QAAP;MAAA,UACGf,KAAK,CAACgB,MAAN,GAAe,CAAf,IAAoBD,GAApB,gBACC;QAAK,SAAS,EAAC,WAAf;QAA2B,GAAG,EAAET,GAAhC;QAAA,UACGQ,IAAI,CAACG;MADR;QAAA;QAAA;QAAA;MAAA,QADD,gBAKC;QAAK,SAAS,EAAC,WAAf;QAAA,UACGH,IAAI,CAACG;MADR;QAAA;QAAA;QAAA;MAAA;IANJ,GAAqBF,GAArB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA9CD;;GAAMhB,G;UAKkBF,S;;;KALlBE,G"},"metadata":{},"sourceType":"module"}